연습문제 외에 추가로 보면 좋은 예제
[Chap07. 영역 처리]
7.2.8) 캐니 에지 검출 구현
7.3.2) 평균값 필터링 구현
7.3.3) 미디언 필터링 구현
7.3.4) 가우시안 필터링 커널얻는 함수와 적용하는 함수 2개 cv사용해서 처리하는 법
7.4.1) 침식연산 구현

chap07_반환타입
1. 라플라시안 인수 커널크기, cv2.convertScaleAbs()적용해야함. 캐니에지함수에는 인자랑 이력임계값(임계2개)
2. 모폴로지연산: 객체형태 변형, 잡음제거나 뚜렷히해서 필요한 요소 추출(이진영상). 닫힘시에는 인접한거 이어주고 열림은 돌출부제거
3. cv2.medianBlur()인자 이미지, 마스크크기(3) / cv2.boxFilter()인자 이미지, -1, 마스크크기(5,5)
4. 중앙값필터링 구현: for안에 핵심코드는 커널중앙을 빼고 더하고+1하여 좌표구하고 roi영역 flatten한뒤에 cv2.soft(roi, cv2.SORT_EVERY_COLUMN)으로 정렬된 배열을 얻은뒤에 size//2해서 구하기
5. 침식과 팽창연산은 마찬가지로 좌표 구하고 roi한뒤에 cv2.bitwise(roi, mask) cv2.countNonZero(temp).
	ㄴ모폴로지 연산은 이진화가 필수이기에 수행하기 전에 cv2.threshold(image, 128, 255, cv2.THRESHOLD_BINARY)[1]을 수행해줍니다.
6. 소벳엣지검출 cv2.Sobel(gray, cv2.CV_8U, 1, 0, 5)인자는 x방향 미분차수 y방향 미분차수 커널사이즈

chap08_반환영상의크기
1. 순방향 사상은 입력과 목적의 크기가 같을 때 유용하지만 다르면 홀(사상x화소)이나 오버랩(여러화소가 한화소로 사상)이 발생.
2. 보간이유: 영상확대시 홀발생, 축소시 오버랩발생 / cv2.INTER_NEAREST_LINEAR_CUBIC_AREA_LANCZOS4
	ㄴ최근접 이웃은 확대비율커지면 계단현상, 모자이크 현상 발생
3. 양선형 보간: 목적 영상의 화소를 역변환으로 계산하여 4개 화소가져옴->두쌍으로 나누어 두 직선을 구한->기준화소값과의 거리비율로 중간 위치를 찾아 화소값 계산->두 중간 화소값을 잇는 직선을 구하여 거리비율기로 최종 화소값 계산
4. 회전 변환 행렬 순 x=xcos-ysin y=ycod+xsin 역 x=xcos+ysin y=ycos-xsin
5. 어파인 변환 회전과 크기변경 2x2에 평행이동추가해서 2x3. 두 어파인 공간 사이의 공선점을 보존하는 변환.
6. 평행이동 translate함수 for안에서 x,y=np.subtract((i,j), pt)하고 contain하면 삽입
7. 